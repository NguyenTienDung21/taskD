Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.

  AmazonImageID:
    Description: The ID of the Amazon machine image (AMI)
    Type: String

Resources:
  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SubnetId:
        Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet1
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-WebServerSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref AmazonImageID 
      Tags:
        - Key: Name
          Value: EC2 | Private Subnet 1
      UserData:
        Fn::Base64:
          !Sub | 
            #!/bin/bash -xe 
            sudo su
            yum update -y 
            yum install -y nodejs19
            wget https://github.com/NguyenTienDung21/taskD/archive/refs/heads/master.zip
            unzip master.zip 
            cd taskD-master
            node migrations.js
            npm install 
            npm start
    
  WebServerAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: My Auto Scaling Group
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet1
        - Fn::ImportValue: !Sub ${ExportVpcStackName}-PrivateSubnet2
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateName: !Ref WebServerLaunchTemplateName
        Version: !GetAtt WebServerLaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 4
      DesiredCapacity: 2
      Tags:
        - Key: Name
          Value: AS-WebServer
          PropagateAtLaunch: true
      TargetGroupARNs:
        - Fn::ImportValue: !Sub ${ExportAlbStackName}-ALBTargetGroup
  
  WebServerScaleUpPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebServerAutoScalingGroup
      Cooldown: 60
      ScalingAdjustment: 1

  WebServerScaleDownPolicy:
    Type: 'AWS::AutoScaling::ScalingPolicy'
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref WebServerAutoScalingGroup
      Cooldown: 60
      ScalingAdjustment: -1

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        Ref: Subnets

  ALBListenerNoSslCertificate:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - RedirectConfig:
            Host: '#{host}'
            Path: '/#{path}'
            Port: '443'
            Protocol: HTTPS
            StatusCode: HTTP_301
          Type: redirect 
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP 
  
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: vpc-0b41b5cde5e84c50c
  
  